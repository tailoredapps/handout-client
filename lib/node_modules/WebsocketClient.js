"use strict"

import Promise from 'bluebird'
import ws from 'ws'

class WebsocketClient {
    constructor(opts) {
        this.opts = opts
    }

    *connect() {
        return new Promise((resolve, reject) => {
            const {url} = this.opts

            this.socket = new ws(url)
            this.socket.on('open', () => resolve(this.socket))

            this.socket.on('message', (data, flags) => console.log(`Received message: "${data}"`))
            this.socket.on('close', (code, message) => {
                console.log(`Connection closed with code ${code}. Message is: "${message}".`)

                if (code > 1000) {
                    process.exit(1)
                }
            })

            this.socket.on('error', err => reject(err))
        })
    }

    *sendCommand(cmd) {
        const {username} = this.opts
        const cryptStr = cmd.encrypt()

        this.socket.send(JSON.stringify({username, cryptStr}))
    }
}

export default WebsocketClient