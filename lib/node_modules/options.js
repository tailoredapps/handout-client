"use strict"

import expandHomeDir from 'expand-home-dir'
import fs from 'fs'
import yargonaut from 'yargonaut'
import yargs from 'yargs'

import output, {outputStyles} from 'output'

// Yes, the rc package could be used to handle this, but since it does much more than reading ~/.handoutrc I opted for a much simpler approach
const rcpath = expandHomeDir('~/.handoutrc')

let defaults = require('../../defaults.json')

try {
    Object.assign(defaults, JSON.parse(fs.readFileSync(rcpath, {encoding: 'utf8'})))
    output(`Using default values from ${rcpath}`)
}
catch (e) {
    console.log(e.message)
    // No .handoutrc file found, moving on
    output(`No ${rcpath} file found`)
}

const args = {
    'app': {
        alias: 'a',
        demand: true,
        describe: 'App identifier (e.g. deepsea, passerby, ...)',
    },
    'targets': {
        alias: 't',
        demand: true,
        array: true,
        describe: 'Space separated list of targets to deploy to(e.g. "--targets callisto titan"). Use "all" if you want to deploy to all available hosts',
    },
    'check': {
        alias: 'c',
        type: 'boolean',
        default: defaults.check,
        describe: 'Perform check, don\'t change anything',
    },
    'username': {
        alias: 'u',
        default: defaults.username || process.env.USER,
        describe: 'Username to use when connecting to deployment server',
    },
    'keyfile': {
        alias: 'k',
        default: defaults.keyfile,
        describe: 'Path to private key',
    },
    'server': {
        alias: 's',
        default: defaults.server,
        describe: 'Full server URL',
    },
}

yargonaut
    .style('cyan')
    .style('yellow', 'required')

const {usage, cliArg} = outputStyles

yargs
    .options(args)
    .usage(`${usage('USAGE')}: $0 -a ${cliArg('appIdentifier')} -t ${cliArg('target')}[ ${cliArg('target')} ...]`)
    .alias('help', 'h')
    .help('help')
    .example('$0 -a deepsea -t callisto', 'Deploy app "deepsea" to target "callisto"')
    .example('$0 -a passerby -t all -u some_user -k ~/.ssh/id_rsa.someuser --check', 'Perform a mock-deployment of "passerby" to all available targets, connecting as user "some_user", using private key file "~/.ssh/id_rsa.someuser".')

const raw = yargs.argv
let options = {}

// Only export full names
Object.keys(args).forEach(k => options[k] = raw[k])

export default options