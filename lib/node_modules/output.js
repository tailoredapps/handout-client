"use strict"

import chalk from 'chalk'
import stripAnsi from 'strip-ansi'

export const LEVEL_OK = 'ok'
export const LEVEL_INFO = 'info'
export const LEVEL_ERROR = 'error'
export const LEVEL_RAW = 'raw'

export const outputStyles = {
    headline: chalk.bold.yellow,
    url: chalk.yellow,
    target: chalk.cyan,
    error: chalk.bold.red,
    username: chalk.yellow,
    app: chalk.yellow,
    [LEVEL_ERROR]: chalk.bold.red,
    [LEVEL_INFO]: chalk.bold.grey,
    [LEVEL_OK]: chalk.bold.green,
}

function pad(str, max = 10, char = ' ') {
    const len = stripAnsi(str).length

    return len < max ? str + (new Array(max - len + 1)).join(char) : str
}

export default function output(data, fromRemote = false) {
    let level, message

    if (typeof data === 'string') {
        level = LEVEL_INFO
        message = data
    }
    else {
        level = data.error ? LEVEL_ERROR : data.level
        message = data.message
    }

    let str = ''

    if (level !== LEVEL_RAW) {
        str += `${fromRemote ? '>' : ' '} [${outputStyles[level](level)}]`
    }

    console.log(`${pad(str)} ${message}`)
}

export function outputOk(message, ...args) {
    output({
        level: LEVEL_OK,
        message
    }, ...args)
}

export function outputRaw(message, ...args) {
    output({
        level: LEVEL_RAW,
        message
    }, ...args)
}

export function outputTitle(version) {
    const hr = chalk.grey(new Array(80).join('-'))
    const newline = ''

    outputRaw(newline)
    outputRaw(hr)
    outputRaw(outputStyles.headline('handOut'))
    outputRaw(`${outputStyles.headline('tailored apps')} backend deployment tool v${version}`)
    outputRaw(hr)
    outputRaw(newline)
}