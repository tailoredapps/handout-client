"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _expandHomeDir = require('expand-home-dir');

var _expandHomeDir2 = _interopRequireDefault(_expandHomeDir);

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _util = require('util');

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _ursa = require('ursa');

var _ursa2 = _interopRequireDefault(_ursa);

var _ws = require('ws');

var _ws2 = _interopRequireDefault(_ws);

var _output = require('output');

var _output2 = _interopRequireDefault(_output);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var WebsocketClient = function () {
    function WebsocketClient(opts) {
        _classCallCheck(this, WebsocketClient);

        this.opts = opts;
    }

    _createClass(WebsocketClient, [{
        key: 'connect',
        value: regeneratorRuntime.mark(function connect() {
            var _this = this;

            return regeneratorRuntime.wrap(function connect$(_context) {
                while (1) {
                    switch (_context.prev = _context.next) {
                        case 0:
                            return _context.abrupt('return', new _bluebird2.default(function (resolve, reject) {
                                var url = _this.opts.url;

                                _this.socket = new _ws2.default(url);
                                _this.socket.on('open', function () {
                                    return resolve(_this.socket);
                                });

                                _this.socket.on('message', function (data) {
                                    try {
                                        var _JSON$parse = JSON.parse(data);

                                        var level = _JSON$parse.level;
                                        var message = _JSON$parse.message;
                                        var error = _JSON$parse.error;

                                        (0, _output2.default)(message, error ? _output.LEVEL_ERROR : level, true);
                                    } catch (e) {
                                        (0, _output2.default)('Failed to parse server response. Something weird might be happening. Error message: ' + e.message, _output.LEVEL_ERROR);
                                        (0, _output2.default)('  Raw server response: ' + data);
                                    }
                                });

                                _this.socket.on('close', function (code, message) {
                                    if (code > 1000) {
                                        (0, _output2.default)('Deployment failed with code ' + _output.outputStyles.error(code) + '.', _output.LEVEL_ERROR);
                                    } else {
                                        (0, _output2.default)('Deployment completed, closing connection to ' + _output.outputStyles.url(url) + '.', _output.LEVEL_OK);
                                    }

                                    if (message) {
                                        (0, _output2.default)('  Socket close message: ' + message);
                                    }

                                    //if (code > 1000) {
                                    //    process.exit(1)
                                    //}
                                });

                                _this.socket.on('error', function (err) {
                                    return reject(err);
                                });
                            }));

                        case 1:
                        case 'end':
                            return _context.stop();
                    }
                }
            }, connect, this);
        })
    }, {
        key: 'sendCommand',
        value: regeneratorRuntime.mark(function sendCommand(opts) {
            var username, keyfile, cmd, privKey, cryptStr;
            return regeneratorRuntime.wrap(function sendCommand$(_context2) {
                while (1) {
                    switch (_context2.prev = _context2.next) {
                        case 0:
                            username = this.opts.username;
                            keyfile = opts.keyfile;
                            cmd = _objectWithoutProperties(opts, ['keyfile']);

                            (0, _output2.default)('Sending request to deploy ' + _output.outputStyles.app(cmd.app) + ' as user ' + _output.outputStyles.username(username) + ' to targets: ' + cmd.targets.map(function (t) {
                                return _output.outputStyles.target(t);
                            }).join(', ') + '.');

                            privKey = _ursa2.default.createPrivateKey(_fs2.default.readFileSync((0, _expandHomeDir2.default)(keyfile), { encoding: 'utf8' }));
                            cryptStr = privKey.privateEncrypt(JSON.stringify(cmd));

                            this.socket.send(JSON.stringify({ username: username, cryptStr: cryptStr }));

                        case 7:
                        case 'end':
                            return _context2.stop();
                    }
                }
            }, sendCommand, this);
        })
    }]);

    return WebsocketClient;
}();

exports.default = WebsocketClient;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ub2RlX21vZHVsZXMvV2Vic29ja2V0Q2xpZW50LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFZTixlQUFlO0FBQ2pCLGFBREUsZUFBZSxDQUNMLElBQUksRUFBRTs4QkFEaEIsZUFBZTs7QUFFYixZQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQTtLQUNuQjs7aUJBSEMsZUFBZTs7Ozs7Ozs7OzZEQU1OLHVCQUFZLFVBQUMsT0FBTyxFQUFFLE1BQU0sRUFBSztvQ0FDN0IsR0FBRyxHQUFJLE1BQUssSUFBSSxDQUFoQixHQUFHOztBQUVWLHNDQUFLLE1BQU0sR0FBRyxpQkFBTyxHQUFHLENBQUMsQ0FBQTtBQUN6QixzQ0FBSyxNQUFNLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRTsyQ0FBTSxPQUFPLENBQUMsTUFBSyxNQUFNLENBQUM7aUNBQUEsQ0FBQyxDQUFBOztBQUVsRCxzQ0FBSyxNQUFNLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRSxVQUFDLElBQUksRUFBSztBQUNoQyx3Q0FBSTswREFDZ0MsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUM7OzRDQUF6QyxLQUFLLGVBQUwsS0FBSzs0Q0FBRSxPQUFPLGVBQVAsT0FBTzs0Q0FBRSxLQUFLLGVBQUwsS0FBSzs7QUFFNUIsOERBQU8sT0FBTyxFQUFFLEtBQUssV0FsQnpCLFdBQVcsR0FrQitCLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQTtxQ0FDckQsQ0FDRCxPQUFPLENBQUMsRUFBRTtBQUNOLHVKQUE4RixDQUFDLENBQUMsT0FBTyxVQXJCM0csV0FBVyxDQXFCZ0gsQ0FBQTtBQUN2SCwwRkFBaUMsSUFBSSxDQUFHLENBQUE7cUNBQzNDO2lDQUNKLENBQUMsQ0FBQTs7QUFFRixzQ0FBSyxNQUFNLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxVQUFDLElBQUksRUFBRSxPQUFPLEVBQUs7QUFDdkMsd0NBQUksSUFBSSxHQUFHLElBQUksRUFBRTtBQUNiLCtGQUFzQyxRQTVCUCxZQUFZLENBNEJRLEtBQUssQ0FBQyxJQUFJLENBQUMsZ0JBNUJsRSxXQUFXLENBNEJ3RSxDQUFBO3FDQUNsRixNQUNJO0FBQ0QsK0dBQXNELFFBL0J2QixZQUFZLENBK0J3QixHQUFHLENBQUMsR0FBRyxDQUFDLGdCQS9CdEQsUUFBUSxDQStCNEQsQ0FBQTtxQ0FDNUY7O0FBRUQsd0NBQUksT0FBTyxFQUFFO0FBQ1QsMkZBQWtDLE9BQU8sQ0FBRyxDQUFBO3FDQUMvQzs7Ozs7QUFBQSxpQ0FLSixDQUFDLENBQUE7O0FBRUYsc0NBQUssTUFBTSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsVUFBQSxHQUFHOzJDQUFJLE1BQU0sQ0FBQyxHQUFHLENBQUM7aUNBQUEsQ0FBQyxDQUFBOzZCQUM5QyxDQUFDOzs7Ozs7Ozs7Ozs0REFHTyxJQUFJO2dCQUNOLFFBQVEsRUFDUixPQUFPLEVBQUssR0FBRyxFQUloQixPQUFPLEVBQ1AsUUFBUTs7Ozs7QUFOUCxvQ0FBUSxHQUFJLElBQUksQ0FBQyxJQUFJLENBQXJCLFFBQVE7QUFDUixtQ0FBTyxHQUFZLElBQUksQ0FBdkIsT0FBTztBQUFLLCtCQUFHLDRCQUFJLElBQUk7O0FBRTlCLGlGQUFvQyxRQW5ETyxZQUFZLENBbUROLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLGlCQUFZLFFBbkQ5QixZQUFZLENBbUQrQixRQUFRLENBQUMsUUFBUSxDQUFDLHFCQUFnQixHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFBLENBQUM7dUNBQUksUUFuRGxHLFlBQVksQ0FtRG1HLE1BQU0sQ0FBQyxDQUFDLENBQUM7NkJBQUEsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBSSxDQUFBOztBQUU3SyxtQ0FBTyxHQUFHLGVBQUssZ0JBQWdCLENBQUMsYUFBRyxZQUFZLENBQUMsNkJBQWMsT0FBTyxDQUFDLEVBQUUsRUFBQyxRQUFRLEVBQUUsTUFBTSxFQUFDLENBQUMsQ0FBQztBQUM1RixvQ0FBUSxHQUFHLE9BQU8sQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQzs7QUFFNUQsZ0NBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBQyxRQUFRLEVBQVIsUUFBUSxFQUFFLFFBQVEsRUFBUixRQUFRLEVBQUMsQ0FBQyxDQUFDLENBQUE7Ozs7Ozs7Ozs7O1dBdER4RCxlQUFlOzs7a0JBMEROLGVBQWUiLCJmaWxlIjoiV2Vic29ja2V0Q2xpZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCJcblxuaW1wb3J0IGNoYWxrIGZyb20gJ2NoYWxrJ1xuaW1wb3J0IGV4cGFuZEhvbWVEaXIgZnJvbSAnZXhwYW5kLWhvbWUtZGlyJ1xuaW1wb3J0IGZzIGZyb20gJ2ZzJ1xuaW1wb3J0IHtpbnNwZWN0fSBmcm9tICd1dGlsJ1xuaW1wb3J0IFByb21pc2UgZnJvbSAnYmx1ZWJpcmQnXG5pbXBvcnQgdXJzYSBmcm9tICd1cnNhJ1xuaW1wb3J0IHdzIGZyb20gJ3dzJ1xuXG5pbXBvcnQgb3V0cHV0LCB7TEVWRUxfRVJST1IsIExFVkVMX0lORk8sIExFVkVMX09LLCBvdXRwdXRTdHlsZXN9IGZyb20gJ291dHB1dCdcblxuY2xhc3MgV2Vic29ja2V0Q2xpZW50IHtcbiAgICBjb25zdHJ1Y3RvcihvcHRzKSB7XG4gICAgICAgIHRoaXMub3B0cyA9IG9wdHNcbiAgICB9XG5cbiAgICAqY29ubmVjdCgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHt1cmx9ID0gdGhpcy5vcHRzXG5cbiAgICAgICAgICAgIHRoaXMuc29ja2V0ID0gbmV3IHdzKHVybClcbiAgICAgICAgICAgIHRoaXMuc29ja2V0Lm9uKCdvcGVuJywgKCkgPT4gcmVzb2x2ZSh0aGlzLnNvY2tldCkpXG5cbiAgICAgICAgICAgIHRoaXMuc29ja2V0Lm9uKCdtZXNzYWdlJywgKGRhdGEpID0+IHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB7bGV2ZWwsIG1lc3NhZ2UsIGVycm9yfSA9IEpTT04ucGFyc2UoZGF0YSlcblxuICAgICAgICAgICAgICAgICAgICBvdXRwdXQobWVzc2FnZSwgZXJyb3IgPyBMRVZFTF9FUlJPUiA6IGxldmVsLCB0cnVlKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICBvdXRwdXQoYEZhaWxlZCB0byBwYXJzZSBzZXJ2ZXIgcmVzcG9uc2UuIFNvbWV0aGluZyB3ZWlyZCBtaWdodCBiZSBoYXBwZW5pbmcuIEVycm9yIG1lc3NhZ2U6ICR7ZS5tZXNzYWdlfWAsIExFVkVMX0VSUk9SKVxuICAgICAgICAgICAgICAgICAgICBvdXRwdXQoYCAgUmF3IHNlcnZlciByZXNwb25zZTogJHtkYXRhfWApXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgdGhpcy5zb2NrZXQub24oJ2Nsb3NlJywgKGNvZGUsIG1lc3NhZ2UpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoY29kZSA+IDEwMDApIHtcbiAgICAgICAgICAgICAgICAgICAgb3V0cHV0KGBEZXBsb3ltZW50IGZhaWxlZCB3aXRoIGNvZGUgJHtvdXRwdXRTdHlsZXMuZXJyb3IoY29kZSl9LmAsIExFVkVMX0VSUk9SKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgb3V0cHV0KGBEZXBsb3ltZW50IGNvbXBsZXRlZCwgY2xvc2luZyBjb25uZWN0aW9uIHRvICR7b3V0cHV0U3R5bGVzLnVybCh1cmwpfS5gLCBMRVZFTF9PSylcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAobWVzc2FnZSkge1xuICAgICAgICAgICAgICAgICAgICBvdXRwdXQoYCAgU29ja2V0IGNsb3NlIG1lc3NhZ2U6ICR7bWVzc2FnZX1gKVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vaWYgKGNvZGUgPiAxMDAwKSB7XG4gICAgICAgICAgICAgICAgLy8gICAgcHJvY2Vzcy5leGl0KDEpXG4gICAgICAgICAgICAgICAgLy99XG4gICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICB0aGlzLnNvY2tldC5vbignZXJyb3InLCBlcnIgPT4gcmVqZWN0KGVycikpXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgKnNlbmRDb21tYW5kKG9wdHMpIHtcbiAgICAgICAgY29uc3Qge3VzZXJuYW1lfSA9IHRoaXMub3B0c1xuICAgICAgICBjb25zdCB7a2V5ZmlsZSwgLi4uY21kfSA9IG9wdHNcblxuICAgICAgICBvdXRwdXQoYFNlbmRpbmcgcmVxdWVzdCB0byBkZXBsb3kgJHtvdXRwdXRTdHlsZXMuYXBwKGNtZC5hcHApfSBhcyB1c2VyICR7b3V0cHV0U3R5bGVzLnVzZXJuYW1lKHVzZXJuYW1lKX0gdG8gdGFyZ2V0czogJHtjbWQudGFyZ2V0cy5tYXAodCA9PiBvdXRwdXRTdHlsZXMudGFyZ2V0KHQpKS5qb2luKCcsICcpfS5gKVxuXG4gICAgICAgIGNvbnN0IHByaXZLZXkgPSB1cnNhLmNyZWF0ZVByaXZhdGVLZXkoZnMucmVhZEZpbGVTeW5jKGV4cGFuZEhvbWVEaXIoa2V5ZmlsZSksIHtlbmNvZGluZzogJ3V0ZjgnfSkpXG4gICAgICAgIGNvbnN0IGNyeXB0U3RyID0gcHJpdktleS5wcml2YXRlRW5jcnlwdChKU09OLnN0cmluZ2lmeShjbWQpKVxuXG4gICAgICAgIHRoaXMuc29ja2V0LnNlbmQoSlNPTi5zdHJpbmdpZnkoe3VzZXJuYW1lLCBjcnlwdFN0cn0pKVxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgV2Vic29ja2V0Q2xpZW50Il19