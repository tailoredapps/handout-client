'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _expandHomeDir = require('expand-home-dir');

var _expandHomeDir2 = _interopRequireDefault(_expandHomeDir);

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _ursa = require('ursa');

var _ursa2 = _interopRequireDefault(_ursa);

var _ws = require('ws');

var _ws2 = _interopRequireDefault(_ws);

var _output = require('output');

var _output2 = _interopRequireDefault(_output);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var WebsocketClient = function () {
  function WebsocketClient(opts) {
    _classCallCheck(this, WebsocketClient);

    this.opts = opts;
  }

  _createClass(WebsocketClient, [{
    key: 'connect',
    value: function connect() {
      var _this = this;

      return new _bluebird2.default(function (resolve, reject) {
        var url = _this.opts.url;

        _this.socket = new _ws2.default(url);
        _this.socket.on('open', function () {
          return resolve(_this.socket);
        });

        _this.socket.on('message', function (data) {
          try {
            var _JSON$parse = JSON.parse(data);

            var level = _JSON$parse.level;
            var message = _JSON$parse.message;
            var error = _JSON$parse.error;

            (0, _output2.default)(message, error ? _output.LEVEL_ERROR : level, true);
          } catch (e) {
            (0, _output2.default)('Failed to parse server response. Something weird might be happening. Error message: ' + e.message, _output.LEVEL_ERROR);
            (0, _output2.default)('  Raw server response: ' + data);
          }
        });

        _this.socket.on('close', function (code, message) {
          if (code > 1000) {
            (0, _output2.default)('Deployment failed with code ' + _output.outputStyles.error(code) + '.', _output.LEVEL_ERROR);
          } else {
            (0, _output2.default)('Deployment completed, closing connection to ' + _output.outputStyles.url(url) + '.', _output.LEVEL_OK);
          }

          if (message) {
            (0, _output2.default)('  Socket close message: ' + message);
          }

          // if (code > 1000) {
          //    process.exit(1)
          // }
        });

        _this.socket.on('error', function (err) {
          return reject(err);
        });
      });
    }
  }, {
    key: 'sendCommand',
    value: function sendCommand(_ref) {
      var command = _ref.command;
      var keyfile = _ref.keyfile;
      var payload = _ref.payload;
      var username = this.opts.username;

      (0, _output2.default)(this.getInfoMessage(command, payload));

      var privKey = _ursa2.default.createPrivateKey(_fs2.default.readFileSync((0, _expandHomeDir2.default)(keyfile), { encoding: 'utf8' }));
      var cryptStr = privKey.privateEncrypt(JSON.stringify({ command: command, payload: payload }));

      this.socket.send(JSON.stringify({ username: username, cryptStr: cryptStr }));
    }
  }, {
    key: 'getInfoMessage',
    value: function getInfoMessage(command, payload) {
      var username = this.opts.username;

      switch (command) {
        case 'deploy':
          var app = payload.app;
          var targets = payload.targets;

          return 'Sending request to deploy ' + _output.outputStyles.app(app) + ' as user ' + _output.outputStyles.username(username) + ' to targets: ' + targets.map(function (t) {
            return _output.outputStyles.target(t);
          }).join(', ') + '.';
      }
    }
  }]);

  return WebsocketClient;
}();

exports.default = WebsocketClient;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ub2RlX21vZHVsZXMvV2Vic29ja2V0Q2xpZW50LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBVU4sZUFBZTtBQUNuQixXQURJLGVBQWUsQ0FDTixJQUFJLEVBQUU7MEJBRGYsZUFBZTs7QUFFakIsUUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUE7R0FDakI7O2VBSEcsZUFBZTs7OEJBS1I7OztBQUNULGFBQU8sdUJBQVksVUFBQyxPQUFPLEVBQUUsTUFBTSxFQUFLO1lBQy9CLEdBQUcsR0FBSSxNQUFLLElBQUksQ0FBaEIsR0FBRzs7QUFFVixjQUFLLE1BQU0sR0FBRyxpQkFBYyxHQUFHLENBQUMsQ0FBQTtBQUNoQyxjQUFLLE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFO2lCQUFNLE9BQU8sQ0FBQyxNQUFLLE1BQU0sQ0FBQztTQUFBLENBQUMsQ0FBQTs7QUFFbEQsY0FBSyxNQUFNLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRSxVQUFDLElBQUksRUFBSztBQUNsQyxjQUFJOzhCQUM4QixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQzs7Z0JBQXpDLEtBQUssZUFBTCxLQUFLO2dCQUFFLE9BQU8sZUFBUCxPQUFPO2dCQUFFLEtBQUssZUFBTCxLQUFLOztBQUU1QixrQ0FBTyxPQUFPLEVBQUUsS0FBSyx5QkFBaUIsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFBO1dBQ25ELENBQUMsT0FBTyxDQUFDLEVBQUU7QUFDViwySEFBOEYsQ0FBQyxDQUFDLE9BQU8sc0JBQWdCLENBQUE7QUFDdkgsOERBQWlDLElBQUksQ0FBRyxDQUFBO1dBQ3pDO1NBQ0YsQ0FBQyxDQUFBOztBQUVGLGNBQUssTUFBTSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsVUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFLO0FBQ3pDLGNBQUksSUFBSSxHQUFHLElBQUksRUFBRTtBQUNmLG1FQUFzQyxxQkFBYSxLQUFLLENBQUMsSUFBSSxDQUFDLDRCQUFpQixDQUFBO1dBQ2hGLE1BQU07QUFDTCxtRkFBc0QscUJBQWEsR0FBRyxDQUFDLEdBQUcsQ0FBQyx5QkFBYyxDQUFBO1dBQzFGOztBQUVELGNBQUksT0FBTyxFQUFFO0FBQ1gsK0RBQWtDLE9BQU8sQ0FBRyxDQUFBO1dBQzdDOzs7OztBQUFBLFNBS0YsQ0FBQyxDQUFBOztBQUVGLGNBQUssTUFBTSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsVUFBQSxHQUFHO2lCQUFJLE1BQU0sQ0FBQyxHQUFHLENBQUM7U0FBQSxDQUFDLENBQUE7T0FDNUMsQ0FBQyxDQUFBO0tBQ0g7OztzQ0FFeUM7VUFBNUIsT0FBTyxRQUFQLE9BQU87VUFBRSxPQUFPLFFBQVAsT0FBTztVQUFFLE9BQU8sUUFBUCxPQUFPO1VBQzlCLFFBQVEsR0FBSSxJQUFJLENBQUMsSUFBSSxDQUFyQixRQUFROztBQUVmLDRCQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUE7O0FBRTdDLFVBQU0sT0FBTyxHQUFHLGVBQUssZ0JBQWdCLENBQUMsYUFBRyxZQUFZLENBQUMsNkJBQWMsT0FBTyxDQUFDLEVBQUUsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFBO0FBQ3BHLFVBQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLE9BQU8sRUFBUCxPQUFPLEVBQUUsT0FBTyxFQUFQLE9BQU8sRUFBRSxDQUFDLENBQUMsQ0FBQTs7QUFFN0UsVUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLFFBQVEsRUFBUixRQUFRLEVBQUUsUUFBUSxFQUFSLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQTtLQUN6RDs7O21DQUVlLE9BQU8sRUFBRSxPQUFPLEVBQUU7VUFDekIsUUFBUSxHQUFJLElBQUksQ0FBQyxJQUFJLENBQXJCLFFBQVE7O0FBRWYsY0FBUSxPQUFPO0FBQ2IsYUFBSyxRQUFRO2NBQ0gsR0FBRyxHQUFjLE9BQU8sQ0FBeEIsR0FBRztjQUFFLE9BQU8sR0FBSyxPQUFPLENBQW5CLE9BQU87O0FBQ3BCLGdEQUFvQyxxQkFBYSxHQUFHLENBQUMsR0FBRyxDQUFDLGlCQUFZLHFCQUFhLFFBQVEsQ0FBQyxRQUFRLENBQUMscUJBQWdCLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBQSxDQUFDO21CQUFJLHFCQUFhLE1BQU0sQ0FBQyxDQUFDLENBQUM7V0FBQSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFHO0FBQUEsT0FDN0s7S0FDRjs7O1NBOURHLGVBQWU7OztrQkFpRU4sZUFBZSIsImZpbGUiOiJXZWJzb2NrZXRDbGllbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuaW1wb3J0IGV4cGFuZEhvbWVEaXIgZnJvbSAnZXhwYW5kLWhvbWUtZGlyJ1xuaW1wb3J0IGZzIGZyb20gJ2ZzJ1xuaW1wb3J0IFByb21pc2UgZnJvbSAnYmx1ZWJpcmQnXG5pbXBvcnQgdXJzYSBmcm9tICd1cnNhJ1xuaW1wb3J0IFdlYnNvY2tldCBmcm9tICd3cydcblxuaW1wb3J0IG91dHB1dCwge0xFVkVMX0VSUk9SLCBMRVZFTF9PSywgb3V0cHV0U3R5bGVzfSBmcm9tICdvdXRwdXQnXG5cbmNsYXNzIFdlYnNvY2tldENsaWVudCB7XG4gIGNvbnN0cnVjdG9yIChvcHRzKSB7XG4gICAgdGhpcy5vcHRzID0gb3B0c1xuICB9XG5cbiAgY29ubmVjdCAoKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGNvbnN0IHt1cmx9ID0gdGhpcy5vcHRzXG5cbiAgICAgIHRoaXMuc29ja2V0ID0gbmV3IFdlYnNvY2tldCh1cmwpXG4gICAgICB0aGlzLnNvY2tldC5vbignb3BlbicsICgpID0+IHJlc29sdmUodGhpcy5zb2NrZXQpKVxuXG4gICAgICB0aGlzLnNvY2tldC5vbignbWVzc2FnZScsIChkYXRhKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgY29uc3Qge2xldmVsLCBtZXNzYWdlLCBlcnJvcn0gPSBKU09OLnBhcnNlKGRhdGEpXG5cbiAgICAgICAgICBvdXRwdXQobWVzc2FnZSwgZXJyb3IgPyBMRVZFTF9FUlJPUiA6IGxldmVsLCB0cnVlKVxuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgb3V0cHV0KGBGYWlsZWQgdG8gcGFyc2Ugc2VydmVyIHJlc3BvbnNlLiBTb21ldGhpbmcgd2VpcmQgbWlnaHQgYmUgaGFwcGVuaW5nLiBFcnJvciBtZXNzYWdlOiAke2UubWVzc2FnZX1gLCBMRVZFTF9FUlJPUilcbiAgICAgICAgICBvdXRwdXQoYCAgUmF3IHNlcnZlciByZXNwb25zZTogJHtkYXRhfWApXG4gICAgICAgIH1cbiAgICAgIH0pXG5cbiAgICAgIHRoaXMuc29ja2V0Lm9uKCdjbG9zZScsIChjb2RlLCBtZXNzYWdlKSA9PiB7XG4gICAgICAgIGlmIChjb2RlID4gMTAwMCkge1xuICAgICAgICAgIG91dHB1dChgRGVwbG95bWVudCBmYWlsZWQgd2l0aCBjb2RlICR7b3V0cHV0U3R5bGVzLmVycm9yKGNvZGUpfS5gLCBMRVZFTF9FUlJPUilcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBvdXRwdXQoYERlcGxveW1lbnQgY29tcGxldGVkLCBjbG9zaW5nIGNvbm5lY3Rpb24gdG8gJHtvdXRwdXRTdHlsZXMudXJsKHVybCl9LmAsIExFVkVMX09LKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG1lc3NhZ2UpIHtcbiAgICAgICAgICBvdXRwdXQoYCAgU29ja2V0IGNsb3NlIG1lc3NhZ2U6ICR7bWVzc2FnZX1gKVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gaWYgKGNvZGUgPiAxMDAwKSB7XG4gICAgICAgIC8vICAgIHByb2Nlc3MuZXhpdCgxKVxuICAgICAgICAvLyB9XG4gICAgICB9KVxuXG4gICAgICB0aGlzLnNvY2tldC5vbignZXJyb3InLCBlcnIgPT4gcmVqZWN0KGVycikpXG4gICAgfSlcbiAgfVxuXG4gIHNlbmRDb21tYW5kICh7Y29tbWFuZCwga2V5ZmlsZSwgcGF5bG9hZH0pIHtcbiAgICBjb25zdCB7dXNlcm5hbWV9ID0gdGhpcy5vcHRzXG5cbiAgICBvdXRwdXQodGhpcy5nZXRJbmZvTWVzc2FnZShjb21tYW5kLCBwYXlsb2FkKSlcblxuICAgIGNvbnN0IHByaXZLZXkgPSB1cnNhLmNyZWF0ZVByaXZhdGVLZXkoZnMucmVhZEZpbGVTeW5jKGV4cGFuZEhvbWVEaXIoa2V5ZmlsZSksIHsgZW5jb2Rpbmc6ICd1dGY4JyB9KSlcbiAgICBjb25zdCBjcnlwdFN0ciA9IHByaXZLZXkucHJpdmF0ZUVuY3J5cHQoSlNPTi5zdHJpbmdpZnkoeyBjb21tYW5kLCBwYXlsb2FkIH0pKVxuXG4gICAgdGhpcy5zb2NrZXQuc2VuZChKU09OLnN0cmluZ2lmeSh7IHVzZXJuYW1lLCBjcnlwdFN0ciB9KSlcbiAgfVxuXG4gIGdldEluZm9NZXNzYWdlIChjb21tYW5kLCBwYXlsb2FkKSB7XG4gICAgY29uc3Qge3VzZXJuYW1lfSA9IHRoaXMub3B0c1xuXG4gICAgc3dpdGNoIChjb21tYW5kKSB7XG4gICAgICBjYXNlICdkZXBsb3knOlxuICAgICAgICBjb25zdCB7IGFwcCwgdGFyZ2V0cyB9ID0gcGF5bG9hZFxuICAgICAgICByZXR1cm4gYFNlbmRpbmcgcmVxdWVzdCB0byBkZXBsb3kgJHtvdXRwdXRTdHlsZXMuYXBwKGFwcCl9IGFzIHVzZXIgJHtvdXRwdXRTdHlsZXMudXNlcm5hbWUodXNlcm5hbWUpfSB0byB0YXJnZXRzOiAke3RhcmdldHMubWFwKHQgPT4gb3V0cHV0U3R5bGVzLnRhcmdldCh0KSkuam9pbignLCAnKX0uYFxuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBXZWJzb2NrZXRDbGllbnRcbiJdfQ==