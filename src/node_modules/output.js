'use strict'

import chalk from 'chalk'
import stripAnsi from 'strip-ansi'

export const LEVEL_OK = 'ok'
export const LEVEL_INFO = 'info'
export const LEVEL_ERROR = 'error'
export const LEVEL_RAW = 'raw'

export const outputStyles = {
  headline: chalk.bold.yellow,
  url: chalk.yellow,
  target: chalk.cyan,
  error: chalk.bold.red,
  username: chalk.yellow,
  app: chalk.yellow,
  usage: chalk.bold.yellow,
  cliArg: chalk.cyan,
  [LEVEL_ERROR]: chalk.bold.red,
  [LEVEL_INFO]: chalk.bold.grey,
  [LEVEL_OK]: chalk.bold.green
}

function pad (str, max = 15, char = ' ') {
  const len = stripAnsi(str).length

  return len < max ? str + (new Array(max - len + 1)).join(char) : str
}

export default function output (message, level = LEVEL_INFO, fromRemote = false) {
  let prepend = ''

  if (level !== LEVEL_RAW) {
    prepend += `[${fromRemote ? 'server' : 'local'}:${outputStyles[ level ](level)}]`
  }

  console.log(`${pad(prepend)} ${message}`)
}

export function outputTitle ({version}) { // All of package.json passed in, using only version for now
  const hr = chalk.grey(new Array(80).join('-'))
  const newline = ''
  const o = msg => output(msg, LEVEL_RAW)

  o(newline)
  o(hr)
  o(outputStyles.headline('handOut'))
  o(`${outputStyles.headline('tailored apps')} backend deployment tool v${version}`)
  o(hr)
  o(newline)
}
